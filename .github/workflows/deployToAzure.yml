name: Build & Deploy .NET App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PUBLISH_PATH: './publish'
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Cache
      uses: actions/cache@v2.1.6
      with:
          # A list of files, directories, and wildcard patterns to cache and restore
        path: ~/.nuget/packages 
        # An explicit key for restoring and saving the cache
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
        restore-keys: ${{ runner.os }}-nuget
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish -c Release -o '${{ env.PUBLISH_PATH }}'
      
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        # Artifact name
        name: dotnet-webapi-demo
        # A file, directory or wildcard pattern that describes what to upload
        path: '${{ env.PUBLISH_PATH }}'

  deploy_to_dev:
    needs: build
    runs-on: ubuntu-latest
    steps:
     - name: Download a Build Artifact
       uses: actions/download-artifact@v2.0.10
       with:
        # Artifact name
        name: dotnet-webapi-demo
        path: '${{ env.PUBLISH_PATH }}'
    
     - name: Azure WebApp
       uses: Azure/webapps-deploy@v2
       with:
        # Name of the Azure Web App
        app-name: dlh-live-demo
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.AZURE_WEB_APP_PUBLISH_PROFILE }}
        package: '${{ env.PUBLISH_PATH }}'
        
  deploy_to_prod:
    
    runs-on: ubuntu-latest
    environment: prod
    steps:
    
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2.0.10
      with:
        # Artifact name
        name: dotnet-webapi-demo
        path: '${{ env.PUBLISH_PATH }}'
        # Destination path
    - name: Azure WebApp
      uses: Azure/webapps-deploy@v2
      with:
        # Name of the Azure Web App
        app-name: dlh-live-demo-prod
        # Applies to Web Apps(Windows and Linux) and Web App Containers(linux). Multi container scenario not supported. Publish profile (*.publishsettings) file contents with Web Deploy secrets
        publish-profile: ${{ secrets.AZURE_WEB_APP_PUBLISH_PROFILE_PROD }}
        package: '${{ env.PUBLISH_PATH }}'
    
    
  
